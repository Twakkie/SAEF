////////////////////////////////////////////////////////////////////
// heliReinforcement script based on the AiLift script by AAmdahl //
////////////////////////////////////////////////////////////////////
//					Author: Colgate aka Twakkie 				  //
////////////////////////////////////////////////////////////////////
// 							Version: 1  						  //
////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Execute the script using this line and modify it to suit your settings:
// ["helispawn1", "helidrop1", 3, 0, 1, "Box_East_AmmoVeh_F", 0] execVM "ailift.sqf";
//
// To run it from a trigger use this:
// if (true) then {["helispawn1", "helidrop1", 3, 0, 1, "Box_East_AmmoVeh_F", 0] execVM "ailift.sqf"};
//----------------------------------------------------------------//
//
//; Settings are divided by commas
//; (1) First setting is spawnpoint in the form of a marker
//; (2) Second setting is insertion point in the form of a marker
//; (3) Third setting is type as seen above ( 1 = Soldiers Ground ||  2 = Soldiers Parachute || 3 = Vehicle Ground || 4 = Vehicle / Ammobox Parachute )
//; (4) Fourth setting is the ammount of enemies to be dropped ( 0 - 8 )
//; (5) Fifth setting is the side of the reinforcement ( 1 = Blufor || 2 = Opfor || 3 = Indedpendent )
//; (6) Sixth setting is the type of vehicle to be dropped off ( put the object name in "" )
//; (7) seventh setting toggles crew in the vehicle ( 1 = ON || 0 = OFF )
//
//
//								 ~~~HOW TO USE~~~																							   
//;Place two markers in the editor, in this instance helispawn1 will be the spawnpoint														   
//;The spawnpoint should be a open area so he heli can take off.																			   
//;the other marker; helidrop1, is where the helicopter will insert the units																   																									
//;You can change your settings as explained above.																							   
//;Execute the script from wherever you want, can be either a trigger or from another script, or something else.							   
//;To select which type of object/vehicle to be lifted, replace the sixth setting with the classname of the vehicle, put it INSIDE the ""      
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////;
//DO NOT EDIT BELOW //;
//////////////////////;

/* if (instance == 1) exitWith {
	hint format["Only run one instance of AiLift at a time"];
}; */
instance = 1;
 
params ["_spawn", 						// (1) First setting is spawnpoint in the form of a marker
		"_drop",						// (2) Second setting is insertion point in the form of a marker
		["_type",1],					// (3) Third setting is type as seen above ( 1 = Soldiers Ground ||  2 = Soldiers Parachute || 3 = Vehicle Ground || 4 = Vehicle / Ammobox Parachute )
		["_force",8],					// (4) Fourth setting is the ammount of enemies to be dropped ( 0 - 8 )
		["_side", west],				// (5) Fifth setting is the side of the reinforcement ( west || east || Indep )
		["_veh", "B_Quadbike_01_F"],	// (6) Sixth setting is the type of vehicle to be dropped off ( put the object name in "" )
		["_crew",0]];					// (7) seventh setting toggles crew in the vehicle ( 1 = ON || 0 = OFF ) 


// Basic Units
_westHeli 		= "b_heli_Transport_01_F";
_westPilot 		= "b_helicrew_F";
_westHeliCrew 	= "b_helicrew_F";
_westUnit 		= "B_Soldier_F";
_westPara 		= "B_soldier_PG_F";
_westVehCrew 	= "B_crew_F";
_eastHeli 		= "O_Heli_Light_02_unarmed_F";
_inepHeli 		= "I_Heli_Transport_02_F";

// Other Variables
_ammount = 0;
_dropzoneact = 0;
landZone = "Land_HelipadEmpty_F" createVehicle (getmarkerpos _drop);
_disposeheli = [[0,0,0]];


//////////////////////////////
//-------Functions----------//
//////////////////////////////

//------SPAWN SOLDIERS------//
FNC_spawnSoldiers = {				

	private["_ammount","_force","_unit","_spawn","_groupSoldiers","_heli"];
	_ammount 		= _this select 0;
	_force 			= _this select 1;
	_unit			= _this select 2;
	_spawn			= _this select 3;
	_groupSoldiers	= _this select 4;
	_heli			= _this select 5;
	
	while {_ammount < _force} do {  
		_unit createUnit [getMarkerPos _spawn, _groupSoldiers, "this moveInCargo transportHeli;", 0.6, "corporal"];
		_ammount = _ammount + 1;
		sleep 0.01;
	};
	_ammount = 0;
};


//-CREATE HELI MOVE WAYPOINT-//
FNC_heliWaypointMove = {			// Function to create the first waypoint for movement of the heli.
	
	private ["_waypoint","_groupPilots"];
	_groupPilots 	= _this select 0;
	
	_waypoint = _groupPilots addWaypoint [getMarkerPos _drop, 10];
	_waypoint setWayPointBehaviour "CARELESS";
	_waypoint setWayPointSpeed "NORMAL";
	_waypoint setWayPointType "MOVE";
	_waypoint setWayPointCombatMode "WHITE";
};

//-CREATE HELI LAND WAYPOINT-//
FNC_heliWaypointDrop = {			// Function to create waypoint to land/drop off cargo

	private ["_waypoint","_groupPilots","_reinfType"];
	_groupPilots	= _this select 0;
	_reinfType 		= _this select 1;
	
	_waypoint = _groupPilots addWaypoint [getpos landZone, 10];
	_waypoint setWayPointBehaviour "CARELESS";
	_waypoint setWayPointSpeed "NORMAL";
	_waypoint setWayPointCombatMode "WHITE";
	
	switch (_reinfType) do {
		case 1: 
		{
			_waypoint setWayPointType "UNLOAD";
			_waypoint setWaypointStatements ["true", "transportHeli land 'landZone'"];	
		};
		
		case 2: 
		{
			_waypoint setWayPointType "MOVE";
			{unassignVehicle _x; 
			_x action ["GetOut",vehicle _x];
			_x setDir getDir transportHeli;
			_x setVelocity [0,20,-20];
			sleep 0.75;
			} forEach units _groupSoldiers;
		};
		
		case 3:
		{ 
			transportHeli flyinheight 5;
			_waypoint setWayPointType "MOVE";
			waitUntil {(getPosATL transportHeli) select 2 < 15};
			transportHeli setSlingLoad objNull;
			transportHeli flyinheight 150;
		};
		
		case 4:
		{
			transportHeli setSlingLoad objNull;		
			chute = createVehicle ["B_Parachute_02_F", [100, 100, 200], [], 0, 'FLY'];
			chute setPos [position dropVeh select 0, position dropVeh select 1, (position dropVeh select 2) - 50];
			dropVeh attachTo [chute, [0, 0, -1.3]];
		};
			
		default { hint "default" };
	};
};

//-CREATE HELI DELETE WAYPOINT-//
FNC_heliWaypointDelete = {			// Function to create waypoint where heli is deleted

	private ["_waypoint","_groupPilots"];
	_groupPilots	= _this select 0;
	
	_waypoint = _groupPilots addWaypoint [getMarkerPos _spawn, 100];
	_waypoint setWayPointBehaviour "CARELESS";
	_waypoint setWayPointSpeed "FULL";
	_waypoint setWayPointType "MOVE";
	_waypoint setWayPointCombatMode "RED";
};

FNC_shuteDetach = {
	
	/*private ["_chute"];
	_chute 	= _this select 0; */

	waitUntil {position dropVeh select 2 < 0.5 || isNull chute};
	detach dropVeh;
	dropVeh setPos [position dropVeh select 0, position dropVeh select 1, 0];
};

//-----CLEANUP UNIT/HELI-----//
FNC_cleanup = {						// Delete heli and crew

	private ["_groupPilots","_reinfType"];
	_groupPilots 	= _this select 0;
	_reinfType		= _this select 1;
	
	
	deleteVehicle landZone;
	deleteVehicle transportHeli;
	{deleteVehicle _x} forEach units _groupPilots;
};



//------SPAWN VEHICLE------//
FNC_createVeh = {					// Create reinforcement vehicle
	
	private ["_veh","_spawn","_crew"];
	_veh	= _this select 0;
	_spawn	= _this select 1;
	_crew 	= _this select 2;
	
	dropVeh = _veh createVehicle (getMarkerPos _spawn);
	dropVeh enableRopeAttach true;
	
	if (_crew == 1) then {
		_vehCrew createUnit [getMarkerPos _spawn, _groupveh, "this moveindriver dropVeh", 0.6, "corporal"]; 
		_vehCrew createUnit [getMarkerPos _spawn, _groupveh, "this moveingunner dropVeh", 0.6, "corporal"];
	};
	
};
//----------------------------//


//////////////////////////////
//-------Main Prog----------//
//////////////////////////////

//UNIT SELECTION//
/*if (_side == west) then {
   //BLUFOR Units//
	_heli 		= _westHeli;
	_pilot 		= _westPilot;
	_crew 		= _westCrew;
	_vehCrew	= _westVehCrew;
}  else {
	if (_side = east) then {   
		//OPFOR Units//
		_heli 		= _westHeli;
		_pilot 		= _westPilot;
		_crew 		= _westCrew;
		_vehCrew	= _westVehCrew;
	} else {
		if (_side = independent) then { 
		//INDI Units//
			_heli 		= _westHeli;
			_pilot 		= _westPilot;
			_crew 		= _westCrew;
			_vehCrew	= _westVehCrew;
		};
	};
}; */

_heli 		= _westHeli;
_pilot 		= _westPilot;
_heliCrew 	= _westHeliCrew;
_vehCrew	= _westVehCrew;



//CREATE HELICOPTER & CREW//
transportHeli = createVehicle [_heli, getMarkerPos _spawn, [], 0, "FLY"]; 
_groupPilots = createGroup _side;
_groupveh = createGroup _side;
_pilot createUnit [getMarkerPos _spawn, _groupPilots, "this moveInDriver transportHeli;", 0.6, "corporal"];
_heliCrew createUnit [getMarkerPos _spawn, _groupPilots, "this moveInTurret [transportHeli, [1]];", 0.6, "corporal"];
_heliCrew createUnit [getMarkerPos _spawn, _groupPilots, "this moveInTurret [transportHeli, [2]];", 0.6, "corporal"];
_groupPilots allowFleeing 0;


//SOLDIER CREATE//
_groupSoldiers = createGroup _side;

switch (_type) do {
	case 1: //LAND ON GROUND//
	{		 
		//Create Soldiers
		_unit = _westUnit;
		[_ammount,_force,_unit,_spawn,_groupSoldiers,transportHeli] call FNC_spawnSoldiers;
		sleep 0.5;
		
		//Waypoints//;
		transportHeli flyinheight 100;
		[_groupPilots] call FNC_heliWaypointMove;
		waituntil {transportHeli distance landZone < 150};
		
		[_groupPilots,_type] call FNC_heliWaypointDrop;	
		waitUntil {(getPosATL transportHeli) select 2 > 1};
		
		{unassignVehicle _x} forEach units _groupSoldiers;
		waitUntil{{_x in transportHeli} count (units _groupSoldiers) == 0;};
		
		[_groupPilots] call FNC_heliWaypointDelete;
		
		//Cleanup//;
		transportHeli flyinheight 100;
		waitUntil{transportHeli distance (getMarkerPos _spawn) < 200};
		[_groupPilots,_type] call FNC_cleanup; 
	};

	case 2: //AIRDROP//
	{	
		//Create Soldiers
		_unit = _westPara;
		[_ammount,_force,_unit,_spawn,_groupSoldiers,transportHeli] call FNC_spawnSoldiers;
		sleep 0.5;

		//Waypoints//;
		transportHeli flyinheight 400;
		[_groupPilots] call FNC_heliWaypointMove;
		waituntil {transportHeli distance (getMarkerPos _drop) < 450};
		
		[_groupPilots,_type] call FNC_heliWaypointDrop;
		
		[_groupPilots] call FNC_heliWaypointDelete;
		
		//Delete//;
		transportHeli flyinheight 100;
		waitUntil{transportHeli distance (getMarkerPos _spawn) < 200};
		[_groupPilots,_type] call FNC_cleanup;
	};
	
	case 3: //VEHICLES GROUND//
	{	
		[_veh,_spawn,_crew] call FNC_createVeh;
		transportHeli setSlingLoad dropVeh;
		
		transportHeli flyinheight 100;
		
		//Waypoints//;
		[_groupPilots] call FNC_heliWaypointMove;
		waituntil {transportHeli distance (getMarkerPos _drop) < 200};
		
		[_groupPilots,_type] call FNC_heliWaypointDrop;

		[_groupPilots] call FNC_heliWaypointDelete;

		//Delete//;
		transportHeli flyinheight 100;
		waitUntil{transportHeli distance (getMarkerPos _spawn) < 200};
		[_groupPilots,_type] call FNC_cleanup; 
	};

	case 4: //VEHICLE PARACHUTE//
	{	
		[_veh,_spawn,_crew] call FNC_createVeh;
		transportHeli setSlingLoad dropVeh;

		transportHeli flyinheight 400;
		
		//Waypoints//;
		[_groupPilots] call FNC_heliWaypointMove;
		waituntil {transportHeli distance (getMarkerPos _drop) < 450};
		
		[_groupPilots,_type] call FNC_heliWaypointDrop;
	
		[_groupPilots] call FNC_heliWaypointDelete;
		
		//Shute Detach//
		call FNC_shuteDetach;
		
		//Delete//
		transportHeli flyinheight 100;
		waitUntil{transportHeli distance (getMarkerPos _spawn) < 200};
		[_groupPilots,_type] call FNC_cleanup; 

	}; 
};
